package com.zhgame.modules.app.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import com.zhgame.common.custom.Constant;
import com.zhgame.common.custom.ErrorCode;
import com.zhgame.common.custom.SystemException;
import com.zhgame.common.custom.base.RemoteClient;
import com.zhgame.common.utils.AppDto;
import com.zhgame.common.utils.AppInterface;
import com.zhgame.common.utils.LogFormat;
import com.zhgame.common.utils.buss.SDKUtil;

@Service
public class AppService {
	private static Logger logger = LoggerFactory.getLogger(AppService.class);
	public Map<String, String> appMap = new HashMap<String, String>();
	private static final String BUSINESS = "/app";

	public String getAppSecret(String appKey) {
		if (StringUtils.isEmpty(appKey)) {
			return null;
		}
		return appMap.get(appKey);
	}

	public synchronized void sync() {
		try {
			String requestHost = SDKUtil.getSDKHostUrl() + BUSINESS;
			AppInterface in = (AppInterface) RemoteClient.getInstance().send(AppInterface.class, requestHost, Constant.APPKEY);
			List<AppDto> rtnList = in.getAppList(LogFormat.getMetaInfo());
			if (rtnList != null) {
				synchronized (appMap) {
					for (AppDto app : rtnList) {
						appMap.put(app.appkey, app.appsecret);
					}
				}
				logger.info(LogFormat.format("SYNC APP SUCCESS", null, appMap));
			} else {
				logger.error(LogFormat.format("SYNC APP FAILED", null, null));
				throw new SystemException(ErrorCode.SYSTEM_SYNC_APP_ERROR, "同步app失败");
			}
		} catch (Exception e) {
			logger.error(LogFormat.format("SYNC APP ERROR", null, e.getMessage()));
			throw new SystemException(ErrorCode.SYSTEM_SYNC_APP_ERROR, "同步app失败", e);
		}
	}
}
